option(digits=4)
options(digits=4)
setwd("/Users/Emilie/Dropbox/Skole/UC3M/Predictive modeling/Practice Workbook/Chapter 2/Data")
# Install packages
install.packages('openxlsx')
install.packages('xtable')
library(openxlsx)
library(xtable)
options(xtable.floating = FALSE)
options(xtable.timestamp = "")
options(digits=4)
cost = read.xlsx('cost.xlsx')
# Defining the regression variables
y = cost$cost;
x1 = cost$machinery;
x2 = cost$raw;
x3 = cost$energy;
x4 = cost$salary;
dev.off();
plot(cost, col = 'navy', pch = 16, cex = 1.1, cex.labels = 1.3, font.labels = 2, gap = 0.15,
main = 'Scatter plot matrix: Linear regression');
model.1 = lm(cost ~ ., data = cost);
fit.1 = fitted(model.1);
# Test linear fit
summary(model.1);
options(digits=4)
summary(model.1);
options(digit=4)
summary(model.1);
dev.off();
residualPlots(model.1, type = 'rstudent', tests = FALSE, quadratic = FALSE, ask = FALSE,
col = 'navy', pch = 16, cex = 1.5, main = 'Residual plots: Linear regression');
dev.off();
plot(log(cost), col = 'navy', pch = 16, cex = 1.1, cex.labels = 1.3, font.labels = 2,
gap = 0.15, labels = paste0('log(',colnames(cost),')'),
main = 'Scatter plot matrix: Log-log regression');
# This scatter plot suggest that a log transformation yield a multiple linear regression model
# Fit of log linear regression model
model.2 = lm(log(cost) ~ log(x1) + log(x2) + log(x3) + log(x4), data = cost);
fit.2 = fitted(model.2);
# Test linear fit
summary(model.2);
summary(model.2);
confint(model.2, 'log(x1)', level = 0.95);
confint(model.2, 'log(x2)', level = 0.95);
confint(model.2, 'log(x3)', level = 0.95);
confint(model.2, 'log(x4)', level = 0.95);
cigarettecons = read.xlsx('cigarettecons.xlsx')
# View variable names
str(cigarettecons);
# Defining the regression variables
#y = cigarettecons$Sales;
#x1 = cigarettecons$Age;
#x2 = cigarettecons$HS;
#x3 = cigarettecons$Income;
#x4 = cigarettecons$Black;
#x5 = cigarettecons$Female;
#x6 = cigarettecons$Price;
# -------------------------------------------------------------------------------------------
# 1. Multiple linear regression
# Initial explanatory plot: Scatter plot matrix
dev.off();
plot(cigarettecons[,2:8], col = 'navy', pch = 16, cex = 1.1, cex.labels = 1.3, font.labels = 2,
gap = 0.15, main = 'Scatter plot matrix: Linear regression');
plot(log(cigarettecons$HS),log(cigarettecons$Sales), col = 'navy', pch = 16, cex = 1.1, cex.labels = 1.3, font.labels = 2,
gap = 0.15, main = 'Scatter plot matrix: Linear regression');
model.1 = lm(Sales ~ Age + HS + Income + Black + Female + Price, data = cigarettecons);
fit.1 = fitted(model.1);
# Test linear fit
summary(model.1);
model.3 = lm(Sales ~ Age + HS + Income + Black + Price, data = cigarettecons);
fit.3 = fitted(model.3);
# Test linear fit excluding female
summary(model.3);
model.5 = lm(Sales ~ Age + Income + Black + Price, data = cigarettecons);
fit.5 = fitted(model.5);
# Test hypothesis of Femare and HS excluded
summary(model.5);
lht(model.1, 'Female = 0');
anova(model.3,model.1);
anova(model.5,model.1);
anova(model.5,model.3);
state.x77;
# Investigate data set
class(state.x77);
str(state.x77);
# Get information on state.x77 data
help(state.x77)
# Form a data frame with the data
state = data.frame(state.x77);
# -------------------------------------------------------------------------------------------
# Initial explanatory plot
# Scatter plot matrix
dev.off();
plot(state, col = 'navy', pch = 16, cex = 1.1, cex.labels = 1.3, font.labels = 2, gap = 0.15,
main = 'Scatter plot matrix: Multiple linear regression');
model.1 = lm(Life.Exp ~ ., data = state);
fit.1 = fitted(model.1);
# Print the regression function
formula(model.1);
# Test linear fit
summary(model.1);
model.1 = lm(Life.Exp ~ ., data = state);
fit.1 = fitted(model.1);
# Print the regression function
formula(model.1);
# Test linear fit
summary(model.1);
